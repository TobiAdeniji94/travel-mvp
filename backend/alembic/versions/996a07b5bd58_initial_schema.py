"""initial schema

Revision ID: 996a07b5bd58
Revises: 
Create Date: 2025-07-10 13:45:14.884522

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '996a07b5bd58'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('accommodations',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=False),
    sa.Column('longitude', sa.Float(), nullable=False),
    sa.Column('images', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('price', sa.Float(), nullable=True),
    sa.Column('rating', sa.Float(), nullable=True),
    sa.Column('amenities', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('activities',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=False),
    sa.Column('longitude', sa.Float(), nullable=False),
    sa.Column('images', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('price', sa.Float(), nullable=True),
    sa.Column('opening_hours', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('rating', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('destinations',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=False),
    sa.Column('longitude', sa.Float(), nullable=False),
    sa.Column('images', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('rating', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('transportations',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('departure_lat', sa.Float(), nullable=False),
    sa.Column('departure_long', sa.Float(), nullable=False),
    sa.Column('arrival_lat', sa.Float(), nullable=False),
    sa.Column('arrival_long', sa.Float(), nullable=False),
    sa.Column('departure_time', sa.DateTime(), nullable=False),
    sa.Column('arrival_time', sa.DateTime(), nullable=False),
    sa.Column('price', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('username', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('password_hash', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('preferences', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('travel_history', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('itineraries',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('start_date', sa.DateTime(), nullable=False),
    sa.Column('end_date', sa.DateTime(), nullable=False),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('data', postgresql.JSON(astext_type=sa.Text()), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('reviews',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('item_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('item_type', postgresql.ENUM('DESTINATION', 'ACTIVITY', 'ACCOMMODATION', 'TRANSPORTATION', name='itemtype'), nullable=True),
    sa.Column('rating', sa.Integer(), nullable=False),
    sa.Column('review_text', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('review_date', sa.DateTime(), nullable=False),
    sa.Column('images', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('bookings',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('itinerary_id', sa.Uuid(), nullable=False),
    sa.Column('item_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('item_type', postgresql.ENUM('DESTINATION', 'ACTIVITY', 'ACCOMMODATION', 'TRANSPORTATION', name='bookingitemtype'), nullable=True),
    sa.Column('booking_date', sa.DateTime(), nullable=False),
    sa.Column('booking_details', postgresql.JSON(astext_type=sa.Text()), nullable=False),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.ForeignKeyConstraint(['itinerary_id'], ['itineraries.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('itinerary_accommodations',
    sa.Column('itinerary_id', sa.Uuid(), nullable=False),
    sa.Column('accommodation_id', sa.Uuid(), nullable=False),
    sa.Column('order', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['accommodation_id'], ['accommodations.id'], ),
    sa.ForeignKeyConstraint(['itinerary_id'], ['itineraries.id'], ),
    sa.PrimaryKeyConstraint('itinerary_id', 'accommodation_id')
    )
    op.create_table('itinerary_activities',
    sa.Column('itinerary_id', sa.Uuid(), nullable=False),
    sa.Column('activity_id', sa.Uuid(), nullable=False),
    sa.Column('order', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['activity_id'], ['activities.id'], ),
    sa.ForeignKeyConstraint(['itinerary_id'], ['itineraries.id'], ),
    sa.PrimaryKeyConstraint('itinerary_id', 'activity_id')
    )
    op.create_table('itinerary_destinations',
    sa.Column('itinerary_id', sa.Uuid(), nullable=False),
    sa.Column('destination_id', sa.Uuid(), nullable=False),
    sa.Column('order', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['destination_id'], ['destinations.id'], ),
    sa.ForeignKeyConstraint(['itinerary_id'], ['itineraries.id'], ),
    sa.PrimaryKeyConstraint('itinerary_id', 'destination_id')
    )
    op.create_table('itinerary_transportations',
    sa.Column('itinerary_id', sa.Uuid(), nullable=False),
    sa.Column('transportation_id', sa.Uuid(), nullable=False),
    sa.Column('order', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['itinerary_id'], ['itineraries.id'], ),
    sa.ForeignKeyConstraint(['transportation_id'], ['transportations.id'], ),
    sa.PrimaryKeyConstraint('itinerary_id', 'transportation_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('itinerary_transportations')
    op.drop_table('itinerary_destinations')
    op.drop_table('itinerary_activities')
    op.drop_table('itinerary_accommodations')
    op.drop_table('bookings')
    op.drop_table('reviews')
    op.drop_table('itineraries')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_table('transportations')
    op.drop_table('destinations')
    op.drop_table('activities')
    op.drop_table('accommodations')
    # ### end Alembic commands ###
