"""add created_at and updated_at to accommodations table

Revision ID: 1cdc43eeba2d
Revises: 2bf9dee9424c
Create Date: 2025-08-06 00:10:42.116734

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
import datetime

# revision identifiers, used by Alembic.
revision: str = '1cdc43eeba2d'
down_revision: Union[str, Sequence[str], None] = '2bf9dee9424c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('accommodations', sa.Column('created_at', sa.DateTime(timezone=True), nullable=True))
    op.add_column('accommodations', sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True))

    now = datetime.datetime.utcnow()
    op.execute(f"UPDATE accommodations SET created_at = '{now.isoformat()}', updated_at = '{now.isoformat()}'")

    op.alter_column('accommodations', 'created_at', nullable=False)
    op.alter_column('accommodations', 'updated_at', nullable=False)
    op.add_column('accommodations', sa.Column('is_deleted', sa.Boolean(), nullable=True))
    op.execute("UPDATE accommodations SET is_deleted = FALSE")
    op.alter_column('accommodations', 'is_deleted', nullable=False)
    op.add_column('accommodations', sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True))
    op.alter_column('bookings', 'status',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('destinations', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=False)
    op.alter_column('destinations', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=False)
    op.execute(
        """
        UPDATE itineraries
        SET status = CASE
            WHEN status = 'draft' THEN 'DRAFT'
            WHEN status = 'generated' THEN 'GENERATED'
            WHEN status = 'booked' THEN 'BOOKED'
            WHEN status = 'cancelled' THEN 'CANCELLED'
            WHEN status = 'completed' THEN 'COMPLETED'
            ELSE status
        END
        """
    )
    op.execute(
    "ALTER TABLE itineraries ALTER COLUMN status TYPE itinerarystatus USING status::itinerarystatus"
    )
    op.alter_column('itineraries', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('itineraries', 'updated_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=False)
    op.alter_column('itineraries', 'status',
               existing_type=postgresql.ENUM('DRAFT', 'GENERATED', 'BOOKED', 'CANCELLED', 'COMPLETED', name='itinerarystatus'),
               type_=sa.VARCHAR(),
               nullable=False)
    op.alter_column('destinations', 'updated_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=False)
    op.alter_column('destinations', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=False)
    op.alter_column('bookings', 'status',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.drop_column('accommodations', 'deleted_at')
    op.drop_column('accommodations', 'is_deleted')
    op.drop_column('accommodations', 'updated_at')
    op.drop_column('accommodations', 'created_at')
    # ### end Alembic commands ###
